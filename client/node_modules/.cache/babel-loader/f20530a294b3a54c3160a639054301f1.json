{"ast":null,"code":"import _classCallCheck from \"F:\\\\React\\\\testiapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\React\\\\testiapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\React\\\\testiapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\React\\\\testiapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\React\\\\testiapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"F:\\\\React\\\\testiapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"F:\\\\React\\\\testiapp\\\\src\\\\Game.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      overflow: 'auto',\n      maxHeight: 300,\n      borderTop: '1px solid grey'\n    },\n    listSection: {\n      backgroundColor: 'inherit'\n    },\n    ul: {\n      backgroundColor: 'inherit',\n      padding: 0\n    },\n    winnerList: {\n      float: 'left',\n      width: '40%',\n      border: '1px solid grey'\n    },\n    GameContainer: {\n      float: 'left',\n      width: '60%',\n      borderTop: '1px solid grey',\n      borderLeft: '1px solid grey',\n      borderBottom: '1px solid grey'\n    },\n    Container: {\n      display: 'flex',\n      width: '50%',\n      verticalAlign: 'center',\n      margin: '0 auto',\n      backgroundColor: '#e0e0e0'\n    }\n  };\n};\n\nfunction Palkinto(props) {\n  var palkintoteksti;\n  var palkinto;\n\n  if (props % 50 === 0) {\n    palkintoteksti = React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"ISO palkinto!\");\n    palkinto = 1;\n  } else if (props % 20 === 0) {\n    palkintoteksti = React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Keskikokoinen palkinto!\");\n    palkinto = 1;\n  } else if (props % 10 === 0) {\n    palkintoteksti = React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Pieni palkinto!\");\n    palkinto = 1;\n  } else {\n    palkintoteksti = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Seuraavaan palkintoon \", 10 - props % 10, \" klikkausta\");\n    palkinto = 0;\n  }\n\n  return [palkintoteksti, palkinto];\n}\n\nfunction countEdit(props) {\n  var data = {\n    luku: props,\n    id: '1'\n  };\n  fetch('/count/edit', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(function (response) {\n    if (!response.ok) throw new Error(response.status);else return response.json();\n  }).catch(function (error) {\n    console.log('error: ' + error);\n  });\n}\n\nfunction addWinner(props) {\n  var data = {\n    nimi: props\n  };\n  fetch(\"/winners/winner\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(function (response) {\n    if (!response.ok) throw new Error(response.status);else return response.json();\n  }).catch(function (error) {\n    console.log('error: ' + error);\n  });\n}\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Game, _React$Component);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n    _this.state = {\n      klikkaus: [],\n      voittajalista: [],\n      voittajat: [],\n      countRequestFailed: false,\n      lastModified: '',\n      disabled: false\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('/winners').then(function (response) {\n        if (!response.ok) throw new Error(response.status);else return response.json();\n      }).then(function (data) {\n        _this2.setState({\n          voittajat: data\n        });\n      }).catch(function (error) {\n        console.log('error: ' + error);\n      });\n      this.timerID = setInterval(function () {\n        return _this2.tick();\n      }, 10000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timerID);\n    }\n  }, {\n    key: \"tick\",\n    value: function tick() {\n      var _this3 = this;\n\n      fetch('/winners').then(function (response) {\n        if (!response.ok) throw new Error(response.status);else return response.json();\n      }).then(function (data) {\n        _this3.setState({\n          voittajat: data\n        });\n      }).catch(function (error) {\n        console.log('error: ' + error);\n      });\n      klikattu = 0;\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      var _this4 = this;\n\n      klikattu = 1;\n      fetch('/count', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'If-Modified-Since': this.state.lastModified\n        }\n      }).then(function (response) {\n        if (!response.ok) throw new Error(response.status);else if (response.status === 304) throw new Error(response.status);else return response.json();\n      }).then(function (data) {\n        var date = new Date(Date.now());\n\n        _this4.setState({\n          countRequestFailed: false,\n          lastModified: date.toUTCString(),\n          klikkaus: data\n        });\n      }).catch(function (error) {\n        console.log('error: ' + error);\n\n        _this4.setState({\n          countRequestFailed: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (klikattu === 1 && this.state.klikkaus.length > 0 && this.state.countRequestFailed === false) {\n        var luku;\n        luku = this.state.klikkaus[0].luku + 1;\n        console.log(luku);\n        console.log(\"lis√§sin\");\n        palkinnot = Palkinto(luku);\n        countEdit(luku);\n\n        if (palkinnot[1] === 1) {\n          addWinner(this.props.nimi);\n        }\n\n        klikattu = 0;\n      }\n\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        className: classes.Container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.GameContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Nimimerkkisi on \", this.props.nimi), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Klikkaa ja voita\"), palkinnot[0]), React.createElement(\"div\", {\n        className: classes.winnerList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Edelliset voittajat:\"), React.createElement(List, {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, this.state.voittajat.map(function (voittajat) {\n        return React.createElement(ListItemText, {\n          key: voittajat.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, voittajat.nimi);\n      }))));\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nvar palkinnot = [];\nvar klikattu = 0;\nGame.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Game);","map":{"version":3,"sources":["F:\\React\\testiapp\\src\\Game.js"],"names":["React","Button","PropTypes","withStyles","List","ListItem","ListItemText","styles","theme","root","width","maxWidth","overflow","maxHeight","borderTop","listSection","backgroundColor","ul","padding","winnerList","float","border","GameContainer","borderLeft","borderBottom","Container","display","verticalAlign","margin","Palkinto","props","palkintoteksti","palkinto","countEdit","data","luku","id","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","status","json","catch","error","console","log","addWinner","nimi","Game","state","klikkaus","voittajalista","voittajat","countRequestFailed","lastModified","disabled","handleClick","bind","setState","timerID","setInterval","tick","clearInterval","klikattu","date","Date","now","toUTCString","length","palkinnot","classes","map","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst styles = theme => ({\r\n\troot: {\r\n\t  width: '100%',\r\n\t  maxWidth: 360,\r\n\t  overflow: 'auto',\r\n\t  maxHeight: 300,\r\n\t  borderTop: '1px solid grey'\r\n\t},\r\n\tlistSection: {\r\n\t  backgroundColor: 'inherit',\r\n\t},\r\n\tul: {\r\n\t  backgroundColor: 'inherit',\r\n\t  padding: 0,\r\n\t},\r\n\twinnerList:{\r\n\t\tfloat:'left',\r\n\t\twidth:'40%',\r\n\t\tborder: '1px solid grey'\r\n\t},\r\n\tGameContainer:{\r\n\t\tfloat:'left',\r\n\t\twidth:'60%',\r\n\t\tborderTop: '1px solid grey',\r\n\t\tborderLeft: '1px solid grey',\r\n\t\tborderBottom: '1px solid grey',\r\n\t},\r\n\tContainer:{\r\n\t\tdisplay: 'flex',\r\n\t\twidth: '50%',\r\n\t\tverticalAlign: 'center',\r\n\t\tmargin: '0 auto',\r\n\t\tbackgroundColor: '#e0e0e0'\r\n\t},\r\n  });\r\n\r\n\r\nfunction Palkinto (props){\r\n\tlet palkintoteksti;\r\n\tlet palkinto;\r\n\tif((props%50) === 0){\r\n\t\tpalkintoteksti = <h1>ISO palkinto!</h1>;\r\n\t\tpalkinto = 1;\r\n\t}\r\n\telse if((props%20) === 0){\r\n\t\tpalkintoteksti = <h1>Keskikokoinen palkinto!</h1>;\r\n\t\tpalkinto = 1;\r\n\t}\r\n\telse if((props%10) === 0){\r\n\t\tpalkintoteksti = <h1>Pieni palkinto!</h1>;\r\n\t\tpalkinto = 1;\r\n\t}\r\n\telse{\r\n\t\tpalkintoteksti = <p>Seuraavaan palkintoon {10-(props%10)} klikkausta</p>;\r\n\t\tpalkinto = 0;\r\n\t}\r\n\treturn [palkintoteksti, palkinto];\r\n}\r\n\r\nfunction countEdit(props) {\r\n\tvar data = {\r\n\t\tluku: props,\r\n\t\tid: '1'\r\n\t}\r\n\tfetch('/count/edit', {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t'Content-Type': 'application/json'\r\n\t\t},\r\n\t\tbody: JSON.stringify(data)\r\n\t}).then((response) => {\r\n\t\tif(!response.ok) throw new Error(response.status);\r\n\t\telse return response.json();\r\n\t}).catch((error) => {\r\n\t\tconsole.log('error: ' + error);\r\n\t});\r\n}\r\n\r\n\r\nfunction addWinner(props){\r\n\tvar data = {\r\n\t\tnimi: props\r\n\t}\r\n\tfetch(\"/winners/winner\", {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {'Content-Type': 'application/json'},\r\n\t\tbody: JSON.stringify(data)\r\n\t}).then((response) => {\r\n\t\tif(!response.ok) throw new Error(response.status);\r\n\t\telse return response.json();\r\n\t}).catch((error) => {\r\n\t\tconsole.log('error: ' + error);\r\n\t});\r\n}\r\n\r\nclass Game extends React.Component {\r\n\tconstructor(props) {\r\n\tsuper(props);\r\n\tthis.state = {\r\n\t\tklikkaus: [], \r\n\t\tvoittajalista: [], \r\n\t\tvoittajat: [],\r\n\t\tcountRequestFailed: false,\r\n\t\tlastModified: '',\r\n\t\tdisabled : false\r\n\t};\r\n\r\n\tthis.handleClick = this.handleClick.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('/winners')\r\n\t\t.then((response) => {\r\n\t\t\tif(!response.ok) throw new Error(response.status);\r\n\t\t\telse return response.json();\r\n\t\t}).then((data) => {\r\n\t\t\tthis.setState({ voittajat: data });\r\n\t\t}).catch((error) => {\r\n\t\t\tconsole.log('error: ' + error);\r\n\t\t});\r\n\r\n\t\tthis.timerID = setInterval(\r\n\t\t\t() => this.tick(),\r\n\t\t\t10000\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.timerID);\r\n\t}\r\n\r\n\ttick() {\r\n\t\tfetch('/winners')\r\n\t\t.then((response) => {\r\n\t\t\tif(!response.ok) throw new Error(response.status);\r\n\t\t\telse return response.json();\r\n\t\t}).then((data) => {\r\n\t\t\tthis.setState({ voittajat: data });\r\n\t\t}).catch((error) => {\r\n\t\t\tconsole.log('error: ' + error);\r\n\t\t});\r\n\t\tklikattu = 0;\r\n\t}\r\n\r\n\r\n\thandleClick() {\r\n\t\tklikattu = 1;\r\n\t\tfetch('/count', {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {'Content-Type': 'application/json', \r\n\t\t'If-Modified-Since': this.state.lastModified \r\n\t\t}}).then((response) => {\r\n\t\t\tif(!response.ok) throw new Error(response.status);\r\n\t\t\telse if(response.status === 304) throw new Error(response.status);\r\n\t\t\telse return response.json();\r\n\t\t}).then((data) => {\r\n\t\t\tlet date = new Date(Date.now());\r\n\t\t\tthis.setState({ countRequestFailed: false, lastModified: date.toUTCString(), klikkaus: data });\r\n\t\t}).catch((error) => {\r\n\t\t\tconsole.log('error: ' + error);\r\n\t\t\tthis.setState({ countRequestFailed: true });\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\t\r\n\t\tif(klikattu === 1 && this.state.klikkaus.length > 0 && this.state.countRequestFailed === false){\r\n\t\t\tlet luku;\r\n\t\t\tluku = this.state.klikkaus[0].luku+1;\r\n\t\t\tconsole.log(luku);\r\n\t\t\tconsole.log(\"lis√§sin\");\r\n\t\t\tpalkinnot = Palkinto(luku);\r\n\t\t\tcountEdit(luku);\r\n\t\t\tif(palkinnot[1] === 1){\r\n\t\t\t\taddWinner(this.props.nimi);\r\n\t\t\t}\r\n\t\t\tklikattu = 0;\r\n\t\t}\r\n\t\tconst { classes } =  this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={classes.Container}>\r\n\t\t\t\t<div className={classes.GameContainer}>\r\n\t\t\t\t<h3>Nimimerkkisi on {this.props.nimi}</h3>\r\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={this.handleClick}>\r\n\t\t\t\tKlikkaa ja voita\r\n\t\t\t\t</Button>\r\n\t\t\t\t{palkinnot[0]}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.winnerList}>\r\n\t\t\t\t<h1>Edelliset voittajat:</h1>\r\n\t\t\t\t<List className={classes.root}>\r\n\t\t\t\t{this.state.voittajat.map(voittajat =>\r\n\t\t\t\t <ListItemText key={voittajat.id}>{voittajat.nimi}</ListItemText>\r\n\t\t\t\t )}\r\n\t\t\t\t</List>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nlet palkinnot = [];\r\nlet klikattu = 0;\r\n\r\nGame.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n  };\r\n  \r\nexport default withStyles(styles)(Game);\r\n\r\n"]},"metadata":{},"sourceType":"module"}