{"ast":null,"code":"import _classCallCheck from \"F:\\\\React\\\\ReactNodeNew\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\React\\\\ReactNodeNew\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\React\\\\ReactNodeNew\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\React\\\\ReactNodeNew\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\React\\\\ReactNodeNew\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"F:\\\\React\\\\ReactNodeNew\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"F:\\\\React\\\\ReactNodeNew\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"F:\\\\React\\\\ReactNodeNew\\\\client\\\\src\\\\Game.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport throttle from 'lodash-es/throttle'; // Material-ui:n muotoilut\n\nvar styles = function styles(theme) {\n  return _defineProperty({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      overflow: 'auto',\n      maxHeight: 300\n    },\n    winnerList: {\n      float: 'left',\n      width: '40%',\n      border: '1px solid grey'\n    },\n    WinnerListText: {\n      padding: '0'\n    },\n    GameContainer: {\n      float: 'left',\n      width: '60%',\n      borderTop: '1px solid grey',\n      borderLeft: '1px solid grey',\n      borderBottom: '1px solid grey'\n    },\n    ListTitle: {\n      borderBottom: '1px solid grey'\n    },\n    Container: {\n      display: 'flex',\n      verticalAlign: 'center',\n      margin: '0 auto',\n      backgroundColor: '#e0e0e0'\n    }\n  }, theme.breakpoints.down('sm'), {\n    Container: {\n      display: 'block'\n    },\n    winnerList: {\n      float: 'none',\n      width: '100%',\n      border: '1px solid grey'\n    },\n    GameContainer: {\n      float: 'none',\n      width: '100%',\n      borderTop: '1px solid grey',\n      borderLeft: '1px solid grey',\n      borderRight: '1px solid grey'\n    }\n  });\n}; // Pelaajalle annetun palautteen määrittäminen klikkausluvun perusteella\n\n\nfunction Palkinto(props) {\n  var palkintoteksti;\n  var palkinto;\n\n  if (props % 500 === 0) {\n    palkintoteksti = React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"ISO palkinto!\");\n    palkinto = 1;\n  } else if (props % 200 === 0) {\n    palkintoteksti = React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Keskikokoinen palkinto!\");\n    palkinto = 1;\n  } else if (props % 100 === 0) {\n    palkintoteksti = React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Pieni palkinto!\");\n    palkinto = 1;\n  } else {\n    palkintoteksti = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Seuraavaan palkintoon \", 100 - props % 100, \" klikkausta\");\n    palkinto = 0;\n  }\n\n  return [palkintoteksti, palkinto];\n}\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Game, _React$Component);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n    _this.state = {\n      klikkaus: [],\n      voittajalista: [],\n      voittajat: [],\n      countRequestFailed: false,\n      lastModified: '',\n      disabled: false\n    }; // Klikkaustoiminnon rajoittaminen, jotta http requestit pysyvät klikkauksissa mukana\n\n    _this.handleClick = throttle(_this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this))), 400);\n    return _this;\n  } // Voittajalistan lataaminen tietokannasta ja sen uudelleen lataamisen määrittäminen\n\n\n  _createClass(Game, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('/winners').then(function (response) {\n        if (!response.ok) throw new Error(response.status);else return response.json();\n      }).then(function (data) {\n        _this2.setState({\n          voittajat: data\n        });\n      }).catch(function (error) {\n        console.log('error: ' + error);\n      });\n      this.timerID = setInterval(function () {\n        return _this2.tick();\n      }, 10000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timerID);\n    } // Voittajalistan hakeminen uudelleen tietokannasta\n\n  }, {\n    key: \"tick\",\n    value: function tick() {\n      var _this3 = this;\n\n      fetch('/winners').then(function (response) {\n        if (!response.ok) throw new Error(response.status);else return response.json();\n      }).then(function (data) {\n        _this3.setState({\n          voittajat: data\n        });\n      }).catch(function (error) {\n        console.log('error: ' + error);\n      });\n      klikattu = 0;\n    } // Klikkauksen käsittely, joka hakee tietokannasta klikkausluvun\n\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      var _this4 = this;\n\n      klikattu = 1;\n      var data = {\n        nimi: this.props.nimi\n      };\n      fetch(\"/count/click\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(function (response) {\n        if (!response.ok) throw new Error(response.status);else return response.json();\n      }).then(function (data) {\n        var date = new Date(Date.now());\n\n        _this4.setState({\n          countRequestFailed: false,\n          lastModified: date.toUTCString(),\n          klikkaus: data\n        });\n      }).catch(function (error) {\n        console.log('error: ' + error);\n\n        _this4.setState({\n          countRequestFailed: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // Lisää pelaajan klikkauksen klikkauslukuun ja kutsuu tarvittavia funktioita\n      if (klikattu === 1 && this.state.klikkaus.length > 0 && this.state.countRequestFailed === false) {\n        var luku;\n        luku = this.state.klikkaus[0].luku + 1;\n        palkinnot = Palkinto(luku);\n        klikattu = 0;\n      }\n\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        className: classes.Container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.GameContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Nimimerkkisi on \", this.props.nimi), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        onClick: this.handleClick,\n        disabled: this.state.disabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Klikkaa ja voita\"), palkinnot[0]), React.createElement(\"div\", {\n        className: classes.winnerList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.ListTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Edelliset voittajat:\")), React.createElement(List, {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, this.state.voittajat.map(function (voittajat) {\n        return React.createElement(ListItemText, {\n          key: voittajat.id,\n          className: classes.WinnerListText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, voittajat.nimi);\n      }))));\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nvar palkinnot = [];\nvar klikattu = 0;\nGame.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Game);","map":{"version":3,"sources":["F:\\React\\ReactNodeNew\\client\\src\\Game.js"],"names":["React","Button","PropTypes","withStyles","List","ListItemText","throttle","styles","theme","root","width","maxWidth","overflow","maxHeight","winnerList","float","border","WinnerListText","padding","GameContainer","borderTop","borderLeft","borderBottom","ListTitle","Container","display","verticalAlign","margin","backgroundColor","breakpoints","down","borderRight","Palkinto","props","palkintoteksti","palkinto","Game","state","klikkaus","voittajalista","voittajat","countRequestFailed","lastModified","disabled","handleClick","bind","fetch","then","response","ok","Error","status","json","data","setState","catch","error","console","log","timerID","setInterval","tick","clearInterval","klikattu","nimi","method","headers","body","JSON","stringify","date","Date","now","toUTCString","length","luku","palkinnot","classes","map","id","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport throttle from 'lodash-es/throttle';\r\n// Material-ui:n muotoilut\r\nconst styles = theme => ({\r\n\troot: {\r\n\t  width: '100%',\r\n\t  maxWidth: 360,\r\n\t  overflow: 'auto',\r\n\t  maxHeight: 300,\r\n\t},\r\n\twinnerList:{\r\n\t\tfloat:'left',\r\n\t\twidth:'40%',\r\n\t\tborder: '1px solid grey'\r\n\t},\r\n\tWinnerListText:{\r\n\t\tpadding: '0'\r\n\t},\r\n\tGameContainer:{\r\n\t\tfloat:'left',\r\n\t\twidth:'60%',\r\n\t\tborderTop: '1px solid grey',\r\n\t\tborderLeft: '1px solid grey',\r\n\t\tborderBottom: '1px solid grey',\r\n\t},\r\n\tListTitle:{\r\n\t\tborderBottom: '1px solid grey'\r\n\t},\r\n\tContainer:{\r\n\t\tdisplay: 'flex',\r\n\t\tverticalAlign: 'center',\r\n\t\tmargin: '0 auto',\r\n\t\tbackgroundColor: '#e0e0e0'\r\n\t},\r\n\t[theme.breakpoints.down('sm')]: {\r\n\t\tContainer:{\r\n\t\t\tdisplay: 'block',\r\n\t\t},\r\n\t\twinnerList:{\r\n\t\t\tfloat:'none',\r\n\t\t\twidth:'100%',\r\n\t\t\tborder: '1px solid grey'\r\n\t\t},\r\n\t\tGameContainer:{\r\n\t\t\tfloat:'none',\r\n\t\t\twidth:'100%',\r\n\t\t\tborderTop: '1px solid grey',\r\n\t\t\tborderLeft: '1px solid grey',\r\n\t\t\tborderRight: '1px solid grey',\r\n\t\t},\r\n\t}\r\n});\r\n\r\n// Pelaajalle annetun palautteen määrittäminen klikkausluvun perusteella\r\nfunction Palkinto (props){\r\n\tlet palkintoteksti;\r\n\tlet palkinto;\r\n\tif((props%500) === 0){\r\n\t\tpalkintoteksti = <h1>ISO palkinto!</h1>;\r\n\t\tpalkinto = 1;\r\n\t}\r\n\telse if((props%200) === 0){\r\n\t\tpalkintoteksti = <h1>Keskikokoinen palkinto!</h1>;\r\n\t\tpalkinto = 1;\r\n\t}\r\n\telse if((props%100) === 0){\r\n\t\tpalkintoteksti = <h1>Pieni palkinto!</h1>;\r\n\t\tpalkinto = 1;\r\n\t}\r\n\telse{\r\n\t\tpalkintoteksti = <p>Seuraavaan palkintoon {100-(props%100)} klikkausta</p>;\r\n\t\tpalkinto = 0;\r\n\t}\r\n\treturn [palkintoteksti, palkinto];\r\n}\r\n\r\n\r\nclass Game extends React.Component {\r\n\tconstructor(props) {\r\n\tsuper(props);\r\n\tthis.state = {\r\n\t\tklikkaus: [], \r\n\t\tvoittajalista: [], \r\n\t\tvoittajat: [],\r\n\t\tcountRequestFailed: false,\r\n\t\tlastModified: '',\r\n\t\tdisabled : false\r\n\t};\r\n\t// Klikkaustoiminnon rajoittaminen, jotta http requestit pysyvät klikkauksissa mukana\r\n\tthis.handleClick = throttle(this.handleClick.bind(this), 400);\r\n\t}\r\n\t// Voittajalistan lataaminen tietokannasta ja sen uudelleen lataamisen määrittäminen\r\n\tcomponentDidMount() {\r\n\t\tfetch('/winners')\r\n\t\t.then((response) => {\r\n\t\t\tif(!response.ok) throw new Error(response.status);\r\n\t\t\telse return response.json();\r\n\t\t}).then((data) => {\r\n\t\t\tthis.setState({ voittajat: data });\r\n\t\t}).catch((error) => {\r\n\t\t\tconsole.log('error: ' + error);\r\n\t\t});\r\n\r\n\t\tthis.timerID = setInterval(\r\n\t\t\t() => this.tick(),\r\n\t\t\t10000\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.timerID);\r\n\t}\r\n\t// Voittajalistan hakeminen uudelleen tietokannasta\r\n\ttick() {\r\n\t\tfetch('/winners')\r\n\t\t.then((response) => {\r\n\t\t\tif(!response.ok) throw new Error(response.status);\r\n\t\t\telse return response.json();\r\n\t\t}).then((data) => {\r\n\t\t\tthis.setState({ voittajat: data });\r\n\t\t}).catch((error) => {\r\n\t\t\tconsole.log('error: ' + error);\r\n\t\t});\r\n\t\tklikattu = 0;\r\n\t}\r\n\r\n\t// Klikkauksen käsittely, joka hakee tietokannasta klikkausluvun\r\n\thandleClick() {\r\n\t\tklikattu = 1;\r\n\t\tlet data = {\r\n\t\t\tnimi: this.props.nimi\r\n\t\t}\r\n\t\tfetch(\"/count/click\", {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\tbody: JSON.stringify(data)\r\n\t\t}).then((response) => {\r\n\t\t\tif(!response.ok) throw new Error(response.status);\r\n\t\t\telse return response.json();\r\n\t\t}).then((data) => {\r\n\t\t\tlet date = new Date(Date.now());\r\n\t\t\tthis.setState({ countRequestFailed: false, lastModified: date.toUTCString(), klikkaus: data });\r\n\t\t\t\r\n\t\t}).catch((error) => {\r\n\t\t\tconsole.log('error: ' + error);\r\n\t\t\tthis.setState({ countRequestFailed: true });\r\n\t\t});\r\n\t\t\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\t// Lisää pelaajan klikkauksen klikkauslukuun ja kutsuu tarvittavia funktioita\r\n\t\tif(klikattu === 1 && this.state.klikkaus.length > 0 && this.state.countRequestFailed === false){\r\n\t\t\tlet luku;\r\n\t\t\tluku = this.state.klikkaus[0].luku+1;\r\n\t\t\tpalkinnot = Palkinto(luku);\r\n\t\t\tklikattu = 0;\r\n\t\t}\r\n\t\tconst { classes } =  this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className={classes.Container}>\r\n\t\t\t\t<div className={classes.GameContainer}>\r\n\t\t\t\t\t<h3>Nimimerkkisi on {this.props.nimi}</h3>\r\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={this.handleClick} disabled={this.state.disabled}>\r\n\t\t\t\t\tKlikkaa ja voita\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{palkinnot[0]}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={classes.winnerList}>\r\n\t\t\t\t\t<div className={classes.ListTitle}>\r\n\t\t\t\t\t\t<h2>Edelliset voittajat:</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<List className={classes.root}>\r\n\t\t\t\t\t\t{this.state.voittajat.map(voittajat =>\r\n\t\t\t\t\t\t<ListItemText key={voittajat.id} className={classes.WinnerListText}>{voittajat.nimi}</ListItemText>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nlet palkinnot = [];\r\nlet klikattu = 0;\r\n\r\nGame.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n  \r\nexport default withStyles(styles)(Game);\r\n\r\n"]},"metadata":{},"sourceType":"module"}