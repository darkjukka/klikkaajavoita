{"ast":null,"code":"import _classCallCheck from \"F:\\\\React\\\\testiapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\React\\\\testiapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\React\\\\testiapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\React\\\\testiapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\React\\\\testiapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"F:\\\\React\\\\testiapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"F:\\\\React\\\\testiapp\\\\src\\\\Game.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\n\nfunction Palkinto(props) {\n  var palkintoteksti;\n  var palkinto;\n\n  if (props % 50 === 0) {\n    palkintoteksti = React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \"ISO palkinto!\");\n    palkinto = 1;\n  } else if (props % 20 === 0) {\n    palkintoteksti = React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Keskikokoinen palkinto!\");\n    palkinto = 1;\n  } else if (props % 10 === 0) {\n    palkintoteksti = React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Pieni palkinto!\");\n    palkinto = 1;\n  } else {\n    palkintoteksti = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Seuraavaan palkintoon \", 10 - props % 10, \" klikkausta\");\n    palkinto = 0;\n  }\n\n  return [palkintoteksti, palkinto];\n}\n\nfunction Listaus(props) {\n  var voittajat = props;\n  var listItems = voittajat.map(function (voittaja, index) {\n    return React.createElement(\"li\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, voittaja);\n  });\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, listItems);\n}\n\nfunction countEdit(props) {\n  var data = {\n    luku: props,\n    id: '1'\n  };\n  fetch('/count/edit', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(function (response) {\n    if (!response.ok) throw new Error(response.status);else return response.json();\n  }).catch(function (error) {\n    console.log('error: ' + error);\n  });\n}\n\nfunction addWinner(props) {\n  var data = {\n    nimi: props\n  };\n  fetch(\"/winners/winner\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(function (response) {\n    if (!response.ok) throw new Error(response.status);else return response.json();\n  }).catch(function (error) {\n    console.log('error: ' + error);\n  });\n}\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Game, _React$Component);\n\n  function Game(props) {\n    var _this;\n\n    _classCallCheck(this, Game);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Game).call(this, props));\n    _this.state = {\n      klikkaus: [],\n      voittajalista: [],\n      voittajat: [],\n      countRequestFailed: false,\n      lastModified: ''\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Game, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('/winners').then(function (response) {\n        if (!response.ok) throw new Error(response.status);else return response.json();\n      }).then(function (data) {\n        _this2.setState({\n          voittajat: data\n        });\n      }).catch(function (error) {\n        console.log('error: ' + error);\n      });\n      this.timerID = setInterval(function () {\n        return _this2.tick();\n      }, 10000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timerID);\n    }\n  }, {\n    key: \"tick\",\n    value: function tick() {\n      var _this3 = this;\n\n      fetch('/winners').then(function (response) {\n        if (!response.ok) throw new Error(response.status);else return response.json();\n      }).then(function (data) {\n        _this3.setState({\n          voittajat: data\n        });\n      }).catch(function (error) {\n        console.log('error: ' + error);\n      });\n      klikattu = 0;\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      var _this4 = this;\n\n      klikattu = 1;\n      fetch('/count', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'If-Modified-Since': this.state.lastModified\n        }\n      }).then(function (response) {\n        if (!response.ok) throw new Error(response.status);else if (response.status === 304) throw new Error(response.status);else return response.json();\n      }).then(function (data) {\n        var date = new Date(Date.now());\n\n        _this4.setState({\n          countRequestFailed: false,\n          lastModified: date.toUTCString(),\n          klikkaus: data\n        });\n      }).catch(function (error) {\n        console.log('error: ' + error);\n\n        _this4.setState({\n          countRequestFailed: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (klikattu == 1 && this.state.klikkaus.length > 0 && this.state.countRequestFailed == false) {\n        var luku;\n        luku = this.state.klikkaus[0].luku + 1;\n        console.log(luku);\n        console.log(\"lis√§sin\");\n        palkinnot = Palkinto(luku);\n        countEdit(luku);\n\n        if (palkinnot[1] == 1) {\n          addWinner(this.props.nimi);\n        }\n\n        klikattu = 0;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Nimimerkkisi on \", this.props.nimi), React.createElement(\"fade\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, palkinnot[0]), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Klikkaa ja voita\"), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Edelliset voittajat:\"), this.state.voittajat.map(function (voittajat) {\n        return React.createElement(\"div\", {\n          key: voittajat.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, voittajat.nimi);\n      }));\n    }\n  }]);\n\n  return Game;\n}(React.Component);\n\nvar palkinnot = [];\nvar klikattu = 0;\nexport default Game;","map":{"version":3,"sources":["F:\\React\\testiapp\\src\\Game.js"],"names":["React","Component","Button","Palkinto","props","palkintoteksti","palkinto","Listaus","voittajat","listItems","map","voittaja","index","countEdit","data","luku","id","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","status","json","catch","error","console","log","addWinner","nimi","Game","state","klikkaus","voittajalista","countRequestFailed","lastModified","handleClick","bind","setState","timerID","setInterval","tick","clearInterval","klikattu","date","Date","now","toUTCString","length","palkinnot"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction Palkinto (props){\r\n\tlet palkintoteksti;\r\n\tlet palkinto;\r\n\tif((props%50) === 0){\r\n\t\tpalkintoteksti = <h1>ISO palkinto!</h1>;\r\n\t\tpalkinto = 1;\r\n\t}\r\n\telse if((props%20) === 0){\r\n\t\tpalkintoteksti = <h1>Keskikokoinen palkinto!</h1>;\r\n\t\tpalkinto = 1;\r\n\t}\r\n\telse if((props%10) === 0){\r\n\t\tpalkintoteksti = <h1>Pieni palkinto!</h1>;\r\n\t\tpalkinto = 1;\r\n\t}\r\n\telse{\r\n\t\tpalkintoteksti = <p>Seuraavaan palkintoon {10-(props%10)} klikkausta</p>;\r\n\t\tpalkinto = 0;\r\n\t}\r\n\treturn [palkintoteksti, palkinto];\r\n}\r\n\r\nfunction Listaus(props) {\r\n\tconst voittajat = props;\r\n\tconst listItems = voittajat.map((voittaja, index) =>\r\n\t\t<li key={index}>\r\n\t\t\t{voittaja}\r\n\t\t</li>\r\n\t);\r\n\treturn (\r\n\t\t<ul>{listItems}</ul>\r\n\t);\r\n}\r\n\r\n\r\nfunction countEdit(props) {\r\n\tvar data = {\r\n\t\tluku: props,\r\n\t\tid: '1'\r\n\t}\r\n\tfetch('/count/edit', {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {\r\n\t\t'Content-Type': 'application/json'\r\n\t\t},\r\n\t\tbody: JSON.stringify(data)\r\n\t}).then((response) => {\r\n\t\tif(!response.ok) throw new Error(response.status);\r\n\t\telse return response.json();\r\n\t}).catch((error) => {\r\n\t\tconsole.log('error: ' + error);\r\n\t});\r\n}\r\n\r\n\r\nfunction addWinner(props){\r\n\tvar data = {\r\n\t\tnimi: props\r\n\t}\r\n\tfetch(\"/winners/winner\", {\r\n\t\tmethod: 'POST',\r\n\t\theaders: {'Content-Type': 'application/json'},\r\n\t\tbody: JSON.stringify(data)\r\n\t}).then((response) => {\r\n\t\tif(!response.ok) throw new Error(response.status);\r\n\t\telse return response.json();\r\n\t}).catch((error) => {\r\n\t\tconsole.log('error: ' + error);\r\n\t});\r\n}\r\n\r\nclass Game extends React.Component {\r\n\tconstructor(props) {\r\n\tsuper(props);\r\n\tthis.state = {\r\n\t\tklikkaus: [], \r\n\t\tvoittajalista: [], \r\n\t\tvoittajat: [],\r\n\t\tcountRequestFailed: false,\r\n\t\tlastModified: ''\r\n\t};\r\n\r\n\tthis.handleClick = this.handleClick.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('/winners')\r\n\t\t.then((response) => {\r\n\t\t\tif(!response.ok) throw new Error(response.status);\r\n\t\t\telse return response.json();\r\n\t\t}).then((data) => {\r\n\t\t\tthis.setState({ voittajat: data });\r\n\t\t}).catch((error) => {\r\n\t\t\tconsole.log('error: ' + error);\r\n\t\t});\r\n\r\n\t\tthis.timerID = setInterval(\r\n\t\t\t() => this.tick(),\r\n\t\t\t10000\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.timerID);\r\n\t}\r\n\r\n\ttick() {\r\n\t\tfetch('/winners')\r\n\t\t.then((response) => {\r\n\t\t\tif(!response.ok) throw new Error(response.status);\r\n\t\t\telse return response.json();\r\n\t\t}).then((data) => {\r\n\t\t\tthis.setState({ voittajat: data });\r\n\t\t}).catch((error) => {\r\n\t\t\tconsole.log('error: ' + error);\r\n\t\t});\r\n\t\tklikattu = 0;\r\n\t}\r\n\r\n\r\n\thandleClick() {\r\n\t\tklikattu = 1;\r\n\t\tfetch('/count', {\r\n\t\tmethod: 'GET',\r\n\t\theaders: {'Content-Type': 'application/json', \r\n\t\t'If-Modified-Since': this.state.lastModified \r\n\t\t}}).then((response) => {\r\n\t\t\tif(!response.ok) throw new Error(response.status);\r\n\t\t\telse if(response.status === 304) throw new Error(response.status);\r\n\t\t\telse return response.json();\r\n\t\t}).then((data) => {\r\n\t\t\tlet date = new Date(Date.now());\r\n\t\t\tthis.setState({ countRequestFailed: false, lastModified: date.toUTCString(), klikkaus: data });\r\n\t\t}).catch((error) => {\r\n\t\t\tconsole.log('error: ' + error);\r\n\t\t\tthis.setState({ countRequestFailed: true });\r\n\t\t});\r\n\t}\r\n\r\n\r\n\r\n\r\n\trender() {\r\n\r\n\t\tif(klikattu == 1 && this.state.klikkaus.length > 0 && this.state.countRequestFailed == false){\r\n\t\t\tlet luku;\r\n\t\t\tluku = this.state.klikkaus[0].luku+1;\r\n\t\t\tconsole.log(luku);\r\n\t\t\tconsole.log(\"lis√§sin\");\r\n\t\t\tpalkinnot = Palkinto(luku);\r\n\t\t\tcountEdit(luku);\r\n\t\t\tif(palkinnot[1] == 1){\r\n\t\t\t\taddWinner(this.props.nimi);\r\n\t\t\t}\r\n\t\t\tklikattu = 0;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h3>Nimimerkkisi on {this.props.nimi}</h3>\r\n\t\t\t\t<fade>{palkinnot[0]}</fade>\r\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={this.handleClick}>\r\n\t\t\t\tKlikkaa ja voita\r\n\t\t\t\t</Button>\r\n\t\t\t\t<h1>Edelliset voittajat:</h1>\r\n\t\t\t\t{this.state.voittajat.map(voittajat =>\r\n\t\t\t\t<div key={voittajat.id}>{voittajat.nimi}</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nlet palkinnot = [];\r\nlet klikattu = 0;\r\n\r\n\r\nexport default Game;"]},"metadata":{},"sourceType":"module"}